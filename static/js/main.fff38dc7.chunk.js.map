{"version":3,"sources":["components/TodoItem.js","components/Todos.js","components/layout/Header.js","components/AddTodo.js","components/pages/About.js","App.js","index.js"],"names":["TodoItem","getStyle","textDecoration","props","todo","completed","this","id","title","className","type","onChange","markComplete","bind","style","onClick","deleteTodo","Component","Todos","todos","map","key","Header","data-toggle","data-target","aria-expanded","to","process","AddTodo","state","onSubmit","e","preventDefault","addTodo","setState","target","name","value","placeholder","About","Fragment","App","axios","delete","then","res","filter","post","data","get","console","log","exact","path","render","component","React","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fff38dc7.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport '../style.css';\r\n\r\nexport class TodoItem extends Component {\r\n    getStyle = () => {\r\n        return {\r\n            textDecoration: this.props.todo.completed ? 'line-through' : 'none'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { id, title } = this.props.todo;\r\n        return (\r\n            <li className=\"list-group-item checkbox\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-xs-1 checkbox\">\r\n                        <label>\r\n                            <input \r\n                                type=\"checkbox\" \r\n                                onChange={this.props.markComplete.bind(this, id)} \r\n                            />\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div id=\"taskText\" className=\"col-xs-9 task-text\" style={this.getStyle()}>\r\n                        <p >{title}</p>\r\n                    </div>\r\n\r\n                    <div className=\"col-xs-2 delete-icon-area\">\r\n                            <button onClick={this.props.deleteTodo.bind(this, id)}>\r\n                                <i className=\"delete-icon glyphicon glyphicon-trash\"></i>\r\n                            </button>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\n// PropTypes\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    markComplete: PropTypes.func.isRequired,\r\n    deleteTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoItem\r\n","import React, { Component } from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Todos extends Component {\r\n\r\n  render() {\r\n    return this.props.todos.map(todo => (\r\n        <TodoItem \r\n            key={todo.id} todo={todo} \r\n            markComplete={this.props.markComplete} \r\n            deleteTodo={this.props.deleteTodo}\r\n        />\r\n    ));\r\n  }\r\n}\r\n\r\n// PropTypes\r\nTodos.propTypes = {\r\n    todos: PropTypes.array.isRequired,\r\n    markComplete: PropTypes.func.isRequired,\r\n    deleteTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Todos;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <nav className=\"navbar navbar-default\">\r\n        <div className=\"container-fluid\">\r\n          \r\n          <div className=\"navbar-header\">\r\n            <button type=\"button\" className=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\" aria-expanded=\"false\">\r\n              <span className=\"sr-only\">Toggle navigation</span>\r\n              <span className=\"icon-bar\"></span>\r\n              <span className=\"icon-bar\"></span>\r\n              <span className=\"icon-bar\"></span>\r\n            </button>\r\n            <span className=\"navbar-brand\" >Todo-App</span>\r\n          </div>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\r\n            <ul className=\"nav navbar-nav\">\r\n              <li className=\"active\"><Link to={process.env.PUBLIC_URL + '/'}>Home</Link><span className=\"sr-only\">(current)</span></li>\r\n              <li><Link to=\"/about\">About</Link></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../style.css';\r\n\r\nexport class AddTodo extends Component {\r\n  state = {\r\n    title: ''\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n      e.preventDefault();\r\n      this.props.addTodo(this.state.title);\r\n      this.setState({title:''});\r\n  }\r\n\r\n  onChange = (e) => this.setState({[e.target.name]: e.target.value});\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row input-area\">\r\n        <div className=\"col-xs-10\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            placeholder=\"Add new task ...\"\r\n            className=\"form-control\"\r\n            id=\"taskInput\"\r\n            value={this.state.title}\r\n            onChange={this.onChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-xs-2\">\r\n          <button id=\"addBtn\" className=\"btn btn-primary\" onClick={this.onSubmit}>\r\n            Add\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// PropTypes\r\nAddTodo.propTypes = {\r\n  addTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddTodo;\r\n","import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n        <React.Fragment>\r\n            <h1>About</h1>\r\n            <p>This is the TodoList App v1.0.0. It is part of a React crash course.</p>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default About;","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Todos from './components/Todos';\nimport Header from './components/layout/Header';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\nimport './App.css';\n//import uuid from 'uuid';\nimport axios from 'axios';\n\n\n\nclass App extends React.Component {\n  state = {\n    todos: [\n      /*{\n        id: 1,\n        title: 'Take out the trash',\n        completed: false\n      },\n      {\n        id: 2,\n        title: 'Dinner with five',\n        completed: false\n      },\n      {\n        id: 3,\n        title: 'Meeting with boss',\n        completed: false\n      }*/\n    ]\n  };\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n      .then(res => this.setState({todos: res.data}));\n  }\n\n  // Toggle complete\n  markComplete = (id) => {\n    this.setState({ todos: this.state.todos.map(todo => {\n      if(todo.id === id ){\n        todo.completed = !todo.completed;\n      }\n      return todo;\n    })});\n  }\n\n  // Delete Item \n  deleteTodo = (id) => {\n    \n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n      .then(res => this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)]}));\n    //this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)]});\n  }\n  \n  // Add item \n  addTodo = (title) => {\n    /*const newTodo = {\n      id: uuid.v4(), \n      title,\n      complete: false\n    }\n    this.setState({todos: [...this.state.todos, newTodo] });*/\n    axios.post('https://jsonplaceholder.typicode.com/todos', { \n      title, \n      completed: false\n    })\n      .then(res => this.setState({todos: [...this.state.todos, res.data] }));\n  }\n\n  render() {\n    console.log(this.state.todos);\n    return (\n      <Router>\n        <div className=\"container\">\n          <Header />\n          <Route exact path={process.env.PUBLIC_URL + '/'} render={props => (\n            <React.Fragment>\n              <div className=\"content-area row\">\n                <div className=\"col-xs-8 col-xs-offset-2\">  \n                  <h2>To-do List</h2>\n                  <div className=\"App\">\n                  <AddTodo addTodo={this.addTodo} />\n                    <ul className=\"list-group\" id=\"taskList\">\n                      <Todos todos={this.state.todos} \n                        markComplete={this.markComplete}\n                        deleteTodo={this.deleteTodo}\n                      />\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </React.Fragment>\n          )} />\n          <Route exact path=\"/about\" component={About} />\n        </div>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}